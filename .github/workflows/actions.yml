name: ci/cd-aws
env:
  DB_SOURCE_USER: ${{ secrets.SOURCE_DB_USERNAME }}
  DB_SOURCE_HOST: ${{ secrets.SOURCE_DB_HOST }}
  DB_SOURCE_NAME: ${{ secrets.SOURCE_DB_NAME }}
  DB_SOURCE_PORT: ${{ secrets.SOURCE_DB_PORT }}
  DB_SOURCE_PASSWORD: ${{ secrets.SOURCE_DB_PASSWORD }}
  TEST_SOURCE_USER: ${{ secrets.test_user }}
  TEST_SOURCE_HOST: ${{ secrets.test_host }}
  TEST_SOURCE_NAME: ${{ secrets.test_database}}
  TEST_SOURCE_SCHEMA: ${{ secrets.test_schema }}
  TEST_SOURCE_PORT: ${{ secrets.test_port }}
  TEST_SOURCE_PASSWORD: ${{ secrets.test_password }}
  
on:
  push:
    branches:
      - main
jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Python3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup environment and test security
        run: make all

  deploy:
    runs-on: ubuntu-latest
    needs: checks
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform apply
        working-directory: terraform
        run: terraform apply -auto-approve
